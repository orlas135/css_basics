/* Reglas CSS */
/* Partes de una regla CSS
  1. El selector
  2. Bloque de declaraciones

    Sintaxis del bloque de declaración:

    {
      atributo: valor;
      atributo-de-mas-de-dos-palabras: otro-valor;
    }
*/

/* No se recomienda utilizar esta forma de invocar CSS */
/* Esta funcion @import tiene un comportamiento bloqueante, ya que el navegador para la lectura del documento HTML cuando la encuentra y solo sigue hasta que haya terminado de descargar lo que esta regla está importando */
@import url(./otro-css.css);

/*Selectores básicos: 
  1. etiquetas: elemtnos HTML
  2. identificadores: atributo ID de las etiquetas
  3. clases: atributo class de las etiquetas
*/

html {
  scroll-behavior: smooth;
}

h1 {
  color: rgb(0, 8, 255);
  background-color: skyblue;
  text-align: center;
}

p {
  color: midnightblue;
}

/*Se considera mala práctica dar estilos con IDs ya que el código no se puede reutilizar*/
#parrafo-dos {
  background-color: skyblue;
}

/*Dar estilos con clases nos permite reutilizar nuestro código CSS*/
.text-20 {
  font-size: 20px;
}

.text-32 {
  font-size: 32px;
}

.bg-skyblue {
  background-color: skyblue;
}

.bg-steelblue {
  background-color: steelblue;
}

.text-white {
  color: white;
}

.hijos-directos > li {
  background-color: thistle;
}

.hijos-descendientes b {
  background-color: thistle;
}

/*El selector de hermanos general va a aplicar a los elementos que son hermanos (que están en el mismo nivel) y que estén por debajo del elemento de referencia*/
.hermanos-general ~ li {
  background-color: thistle;
}

/*El selector de hermano adyacente va a aplicar al elemento que es hermano (que están en el mismo nivel) y que esté por debajo del elemento de referencia*/

.hermanos-adyacentes + li {
  background-color: thistle;
}

/*Selectores de atributos*/

.selectores-atributos a[href] {
  color: orangered;
}

.selectores-atributos a[target="_blank"] {
  font-weight: bold;
}

/*El comodín del asterisco aplica el estilo si contiene la palabra/texto especificada en cualquier parte*/
.selectores-atributos a[href*="jonmircha"] {
  font-size: 24px;
}

/*El comodín del circunflejo aplica el estilo si contiene la palabra/texto al inicio*/
.selectores-atributos a[href^="http:"] {
  text-decoration: none;
}

/*El comodín del dólar aplica el estilo si contiene la palabra/texto al final*/
.selectores-atributos a[href$=".com"] {
  background-color: black;
}

/*El comodín del ~ aplica el estilo si contiene la palabra/texto en una lista separada por espacios*/
.selectores-atributos a[class~="cursos"] {
  background-color: midnightblue;
}

/*El comodín del | aplica el estilo si contiene la palabra/texto en una lista separada por espacios y que después del texto especificado pueda venir un guión medio*/
.selectores-atributos a[class|="menu"] {
  font-style: italic;
}

/*Selector universal*/
* {
  font-family: Arial, Helvetica, sans-serif;
}

.selector-universal * {
  background-color: bisque;
}

/*
Pseudoclases: Dan estilos dependiendo del contexto, posición o estado del elemento
https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes
*/

.form-pseudoclases *:required {
  border-color: yellow;
}

.form-pseudoclases *:valid {
  border-color: green;
}

.form-pseudoclases *:invalid {
  border-color: red;
}

.form-pseudoclases *:focus {
  background-color: salmon;
}

.form-pseudoclases *:disabled {
  background-color: aquamarine;
}

.menu-pseudoclases a:visited {
  color: darkgoldenrod;
}

.menu-pseudoclases a:hover {
  color: orange;
}

.p-pseudoclases:hover {
  font-size: 20px;
}

#temario:target {
  background-color: lightgray;
}

.lista-pseudoclases li:first-child,
.lista-pseudoclases li:last-child,
.lista-pseudoclases li:nth-child(6) {
  color: burlywood;
}

.lista-pseudoclases li:nth-child(2n) {
  font-size: 20px;
}

.lista-pseudoclases li:nth-child(3n) {
  font-weight: bold;
}

.lista-pseudoclases li:nth-child(even) {
  background-color: blue;
  color: white;
}

.lista-pseudoclases li:nth-child(odd) {
  background-color: bisque;
}

.articulo-pseudoclases p:first-of-type {
  background-color: pink;
}

.articulo-pseudoclases p:last-of-type {
  background-color: violet;
}

.articulo-pseudoclases p:nth-of-type(3) {
  background-color: brown;
}

.articulo-pseudoclases *:not(p, /*.boton, .lista */) {
  background-color: beige;
}

/*Pseudoelementos
Dan estilos a partes específicas de un elemento, se una el :: para diferenciarlos de las pseudoclases
https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements
*/

.saga-geminis::before {
  content: "♊";
}

.saga-geminis::after {
  content: "♊";
}

.saga-precio::before {
  content: "$";
  font-weight: bold;
}

.saga-precio::after {
  content: "USD";
  font-weight: bold;
}

.p-pseudoelementos::first-letter {
  font-size: 32px;
  font-weight: bold;
}

.p-pseudoelementos::first-line {
  color: coral;
}

.p-pseudoelementos::selection {
  color: greenyellow;
  background-color: black;
}

.i-pseudoelementos::placeholder {
  color: aqua;
}

/*Agrupar selectores*/

.form-agrupar-selectores input[type="text"],
.form-agrupar-selectores input[type="email"],
.form-agrupar-selectores textarea {
  border-color: yellow;
  background-color: black;
  font-size: 20px;
  display: block;
  width: 300px;
  border-width: 5px;
  border-style: dashed;
}

/*
El algoritmo de CSS: es la forma en que el navegador aplica los estilos al documento HTML. 
Es vital entender este concepto para entender cómo se aplican y en algunas ocasiones
cómo se sobreescriben las reglas CSS

1. Cascada
2. Especificidad
3. Herencia

La cascada es el mecanismo en que el navegador aplica los estilos. Y toma en cuenta lo siguiente en este orden:

1) El origen del código:
  - User Agent (los estilos por defecto del navegador)
  - Personalizaciones del usuario
  - Los estilos del autor
2) La especificidad del selector
3) Orden de aparición


La especificidad es el peso que tiene un selector cuando hay conflicto de estilos. Se calcula de la siguiente forma:
  Etiquetas y pseudoelementos ---------- (0,0,0,1)
  Clases, atributos y pseudoclases ----- (0,0,1,0)
  Identificadores ---------------------- (0,1,0,0)
  Estilos en línea --------------------- (1,0,0,0)
  !important -------------- Rompe la especificidad

La herencia es la capacidad de un selector de obtener (heredar) los valores de sus ancestros más cercanos.
Para aplicarla se usa el valor inherit, si queremos evitarla podemos asignar otro valor o inicializar 
la propiedad en cuestion con el valor initial

https://web.dev/learn/css/inheritance/#%C2%BFque-propiedades-son-heredables
*/

blockquote#cita-marco.cita-marco {
  background-color: blueviolet;
}

blockquote {
  background-color: burlywood;
}

#cita-marco {
  background-color: lawngreen;
}

blockquote.cita-marco {
  background-color: tomato;
}

.cita-marco {
  background-color: cornflowerblue;
}

.cita-marco {
  background-color: sienna !important;
}

blockquote#cita-marco {
  background-color: lightsalmon;
}

.cita-marco {
  background-color: moccasin !important;
  background-color: darkorange !important;
  font-size: 32px;
  border-style: dotted;
  border-color: red;
}

.cita-marco cite {
  background-color: pink;
  background-color: inherit;
  font-size: 24px;
  font-size: initial;
  border-style: inherit;
  border-color: inherit;
}
